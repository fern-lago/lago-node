/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { LagoApi } from "@fern-api/lago";
import * as core from "../../../../core";

export const ChargeObject: core.serialization.ObjectSchema<serializers.ChargeObject.Raw, LagoApi.ChargeObject> =
    core.serialization.object({
        lagoId: core.serialization.property("lago_id", core.serialization.string().optional()),
        lagoBillableMetricId: core.serialization.property(
            "lago_billable_metric_id",
            core.serialization.string().optional()
        ),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        chargeModel: core.serialization.property(
            "charge_model",
            core.serialization.lazy(async () => (await import("../../..")).ChargeModelType).optional()
        ),
        properties: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        groupProperties: core.serialization.property(
            "group_properties",
            core.serialization
                .list(core.serialization.lazyObject(async () => (await import("../../..")).GroupPropertiesObject))
                .optional()
        ),
    });

export declare namespace ChargeObject {
    interface Raw {
        lago_id?: string | null;
        lago_billable_metric_id?: string | null;
        created_at?: string | null;
        charge_model?: serializers.ChargeModelType.Raw | null;
        properties?: Record<string, unknown> | null;
        group_properties?: serializers.GroupPropertiesObject.Raw[] | null;
    }
}
