/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { LagoApi } from "@fern-api/lago";
import * as core from "../../../../core";

export const ChargeUsageObject: core.serialization.ObjectSchema<
    serializers.ChargeUsageObject.Raw,
    LagoApi.ChargeUsageObject
> = core.serialization.object({
    units: core.serialization.number().optional(),
    amountCents: core.serialization.property("amount_cents", core.serialization.number().optional()),
    amountCurrency: core.serialization.property("amount_currency", core.serialization.string().optional()),
    charge: core.serialization.lazyObject(async () => (await import("../../..")).Charge).optional(),
    billableMetric: core.serialization.property(
        "billable_metric",
        core.serialization.lazyObject(async () => (await import("../../..")).ChargeBillableMetric).optional()
    ),
    groups: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).Group))
        .optional(),
});

export declare namespace ChargeUsageObject {
    interface Raw {
        units?: number | null;
        amount_cents?: number | null;
        amount_currency?: string | null;
        charge?: serializers.Charge.Raw | null;
        billable_metric?: serializers.ChargeBillableMetric.Raw | null;
        groups?: serializers.Group.Raw[] | null;
    }
}
