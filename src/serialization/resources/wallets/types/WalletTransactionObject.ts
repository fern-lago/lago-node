/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { LagoApi } from "@fern-api/lago";
import * as core from "../../../../core";

export const WalletTransactionObject: core.serialization.ObjectSchema<
    serializers.WalletTransactionObject.Raw,
    LagoApi.WalletTransactionObject
> = core.serialization.object({
    lagoId: core.serialization.property("lago_id", core.serialization.string().optional()),
    lagoWalletId: core.serialization.property("lago_wallet_id", core.serialization.string().optional()),
    status: core.serialization.lazy(async () => (await import("../../..")).TransactionStatus).optional(),
    transactionType: core.serialization.property(
        "transaction_type",
        core.serialization.lazy(async () => (await import("../../..")).TransactionType).optional()
    ),
    amount: core.serialization.number().optional(),
    creditAmount: core.serialization.property("credit_amount", core.serialization.number().optional()),
    settledAt: core.serialization.property("settled_at", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
});

export declare namespace WalletTransactionObject {
    interface Raw {
        lago_id?: string | null;
        lago_wallet_id?: string | null;
        status?: serializers.TransactionStatus.Raw | null;
        transaction_type?: serializers.TransactionType.Raw | null;
        amount?: number | null;
        credit_amount?: number | null;
        settled_at?: string | null;
        created_at?: string | null;
    }
}
